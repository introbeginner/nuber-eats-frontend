[{"D:\\dev\\nuber-eats-frontend\\src\\App.tsx":"1","D:\\dev\\nuber-eats-frontend\\src\\index.tsx":"2","D:\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts":"3","D:\\dev\\nuber-eats-frontend\\src\\apollo.ts":"4","D:\\dev\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx":"5","D:\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"6","D:\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","D:\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"8","D:\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","D:\\dev\\nuber-eats-frontend\\src\\components\\button.tsx":"10","D:\\dev\\nuber-eats-frontend\\src\\constant.ts":"11","D:\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"12","D:\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx":"13","D:\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx":"14","D:\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"15","D:\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"16","D:\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"17","D:\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"18"},{"size":474,"mtime":1610073941221,"results":"19","hashOfConfig":"20"},{"size":756,"mtime":1610159436931,"results":"21","hashOfConfig":"20"},{"size":425,"mtime":1609742503790,"results":"22","hashOfConfig":"20"},{"size":994,"mtime":1610244448835,"results":"23","hashOfConfig":"20"},{"size":536,"mtime":1610242925304,"results":"24","hashOfConfig":"20"},{"size":1079,"mtime":1610278770503,"results":"25","hashOfConfig":"20"},{"size":3613,"mtime":1610159509273,"results":"26","hashOfConfig":"20"},{"size":4020,"mtime":1610174853780,"results":"27","hashOfConfig":"20"},{"size":233,"mtime":1610071402014,"results":"28","hashOfConfig":"20"},{"size":487,"mtime":1610095512661,"results":"29","hashOfConfig":"20"},{"size":47,"mtime":1610158923544,"results":"30","hashOfConfig":"20"},{"size":961,"mtime":1610320143810,"results":"31","hashOfConfig":"20"},{"size":611,"mtime":1610320063822,"results":"32","hashOfConfig":"20"},{"size":1027,"mtime":1610284241510,"results":"33","hashOfConfig":"20"},{"size":303,"mtime":1610243346395,"results":"34","hashOfConfig":"20"},{"size":1668,"mtime":1610258298775,"results":"35","hashOfConfig":"20"},{"size":2509,"mtime":1610282958967,"results":"36","hashOfConfig":"20"},{"size":853,"mtime":1610280573678,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9qvejh",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\nuber-eats-frontend\\src\\App.tsx",["81","82"],"D:\\dev\\nuber-eats-frontend\\src\\index.tsx",[],["83","84"],"D:\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],["85","86"],"D:\\dev\\nuber-eats-frontend\\src\\apollo.ts",[],["87","88"],"D:\\dev\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"D:\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",["89"],"import React from \"react\"\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Restaurants } from \"../pages/client/restaurants\";\r\nimport { Header } from \"../components/Header\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { ConfirmEmail } from \"../pages/user/confirm-email\";\r\nimport { EditProfile } from \"../pages/user/edit-profile\";\r\n\r\nconst ClientRoutes = [\r\n  <Route key={1} path=\"/\" exact>\r\n    <Restaurants />\r\n  </Route>,\r\n  <Route key={2} path=\"/confirm\" exact>\r\n    <ConfirmEmail/>\r\n  </Route>,\r\n  <Route key={3} path=\"/edit-profile\" exact>\r\n    <EditProfile/>\r\n</Route>\r\n];\r\n\r\n\r\n\r\n\r\nexport const LoggedInRouter = () => {\r\n  const { data, loading, error } = useMe();\r\n\r\n  if (!data || loading || error) {\r\n    return <div className='h-screen flex justify-center items-center'>\r\n      <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\r\n    </div>\r\n  }\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <Switch>\r\n        {data.me.role === \"Client\" && ClientRoutes}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","D:\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx",["90","91"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport nuberLogo from '../images/logo.svg';\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\nimport {Helmet} from \"react-helmet-async\"\r\nimport { authToken, isLoggedInVar } from \"../apollo\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constant\";\r\n\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n  resultError?: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const { register, getValues, errors, handleSubmit, formState } = useForm<ILoginForm>({ mode: \"onChange\" });\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN,token);\r\n      authToken(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Login | Number Eate</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className='w-52 mb-5' />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">Welcome back</h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^[a-zA-Z][a-zA-Z0-9]+@{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,4}$/\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          {errors.email?.type ==\"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a vaild email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          \r\n          <Button canClick={formState.isValid} loading={loading} actionText={\"Log in\"} />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Nuber?\r\n          <Link to='/create-account' className=\" text-lime-600 hover:underline\">\r\n            Create an Account\r\n            </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n};",["92","93"],"D:\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx",["94"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport nuberLogo from '../images/logo.svg';\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\nimport { createAccountMutation, createAccountMutationVariables } from \"../__generated__/createAccountMutation\";\r\n\r\n\r\nconst CREAT_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(\r\n      input: $createAccountInput\r\n      ) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    watch,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Client,\r\n    }\r\n  });\r\n\r\n  const history = useHistory()\r\n\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"Account Created!! Log in now!\");\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  const [createAccountMutation, { loading, data: createAccountMutationResult }] = useMutation<\r\n    createAccountMutation,\r\n    createAccountMutationVariables\r\n  >(CREAT_ACCOUNT_MUTATION, { onCompleted });\r\n  const onSubmit = () => {\r\n    const { email, password, role } = getValues();\r\n    if (!loading) {\r\n      createAccountMutation({\r\n        variables: {\r\n          createAccountInput: { email, password, role }\r\n        }\r\n      })\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Creat Account | Number Eate</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className='w-52 mb-10' alt=\"Nuber Eats\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">Let's get start!</h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n        >\r\n          <input\r\n            ref={register({ required: \"Email is required\" })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\"Password must be more than 10 chars.\" />\r\n          )}\r\n          <select name=\"role\" ref={register({ required: true })} className=\"input focus:bg-gray-200\">\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Create Account\"} />\r\n        </form>\r\n        {createAccountMutationResult?.createAccount.error && (\r\n          <FormError errorMessage={createAccountMutationResult.createAccount.error} />)}\r\n        <div>\r\n          Already have an account ?{\" \"}\r\n          <Link to='/' className=\" text-lime-600 hover:underline\">\r\n            Log in now\r\n            </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n};","D:\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"D:\\dev\\nuber-eats-frontend\\src\\components\\button.tsx",[],"D:\\dev\\nuber-eats-frontend\\src\\constant.ts",[],"D:\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",["95","96"],"D:\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"D:\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx",["97"],"D:\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"D:\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["98"],"D:\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",[],"D:\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],{"ruleId":"99","severity":1,"message":"100","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"103","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"104","replacedBy":"110"},{"ruleId":"106","replacedBy":"111"},{"ruleId":"99","severity":1,"message":"112","line":2,"column":35,"nodeType":"101","messageId":"102","endLine":2,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":72,"column":9,"nodeType":"115","endLine":72,"endColumn":54},{"ruleId":"116","severity":1,"message":"117","line":92,"column":31,"nodeType":"118","messageId":"119","endLine":92,"endColumn":33},{"ruleId":"104","replacedBy":"120"},{"ruleId":"106","replacedBy":"121"},{"ruleId":"99","severity":1,"message":"122","line":36,"column":5,"nodeType":"101","messageId":"102","endLine":36,"endColumn":10},{"ruleId":"99","severity":1,"message":"123","line":38,"column":16,"nodeType":"101","messageId":"102","endLine":38,"endColumn":23},{"ruleId":"99","severity":1,"message":"124","line":38,"column":25,"nodeType":"101","messageId":"102","endLine":38,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":21,"column":13,"nodeType":"115","endLine":21,"endColumn":69},{"ruleId":"99","severity":1,"message":"125","line":50,"column":12,"nodeType":"101","messageId":"102","endLine":50,"endColumn":13},"@typescript-eslint/no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],["126"],["127"],"'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["126"],["127"],"'watch' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]